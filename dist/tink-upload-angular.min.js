/*! tink-upload-angular v1.0.1 */
"use strict";!function(module){try{module=angular.module("tink.upload")}catch(e){module=angular.module("tink.upload",["ngLodash","angularFileUpload","tink.safeApply"])}module.factory("UploadFile",["$q","tinkUploadService",function($q,tinkUploadService){var upload=null,uploudFile=function(data,uploaded){if(!(data instanceof window.File))throw"uploadFile was no file object!";this.fileData=data,this.fileData&&(this.fileName=this.fileData.name,this.fileType=this.fileData.type,this.fileSize=this.fileData.size),uploaded?this.progress=100:this.progress=0};return uploudFile.prototype.getFileName=function(){return this.fileName},uploudFile.prototype.getData=function(){return this.fileData},uploudFile.prototype.getProgress=function(){return this.progress},uploudFile.prototype.getFileSize=function(){return this.fileSize},uploudFile.prototype.getFileExtension=function(){var posLastDot=this.getFileName().lastIndexOf(".");return this.getFileName().substring(posLastDot,this.getFileName().length)},uploudFile.prototype.getFileMimeType=function(){return this.fileType},uploudFile.prototype.cancel=function(){null!==upload&&upload.abort&&upload.abort()},uploudFile.prototype.upload=function(options){var scope=this,promise=$q.defer();return upload=tinkUploadService.upload(this,options),upload.then(function(){scope.progress=100,promise.resolve(scope)},function(){scope.progress=0,promise.reject(scope)},function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);isNaN(progressPercentage)&&(progressPercentage=0),scope.progress=progressPercentage,promise.notify({progress:progressPercentage,object:scope})}),promise.promise},uploudFile.prototype.remove=function(){tinkUploadService.remove(this)},uploudFile}])}(),function(module){try{module=angular.module("tink.upload")}catch(e){module=angular.module("tink.upload",["ngLodash","angularFileUpload","tink.safeApply"])}module.directive("tinkUpload",["$window","safeApply","UploadFile","lodash","tinkUploadService",function($window,safeApply,UploadFile,_,tinkUploadService){return{restrict:"A",replace:!0,transclude:!0,templateUrl:"templates/tinkUpload.html",scope:{ngModel:"=",fieldName:"@?",multiple:"=?",allowedTypes:"=?",maxFileSize:"@?",url:"@?",sendOptions:"=?"},compile:function(){return{pre:function(){},post:function(scope,elem){function addLisener(){elem.bind("dragenter",dragenter),elem.bind("dragleave",dragleave),elem.bind("dragover",dragover),elem.bind("drop",drop)}function dragenter(e){e.stopPropagation(),e.preventDefault(),elem.addClass("dragenter")}function dragleave(){elem.removeClass("dragenter")}function dragover(e){e.stopPropagation(),e.preventDefault(),elem.addClass("dragenter")}function drop(e){safeApply(scope,function(){elem.removeClass("dragenter");var files;if(e.type&&"drop"===e.type){e.stopPropagation(),e.preventDefault();var dt=e.originalEvent.dataTransfer;files=dt.files}else files=e;for(var i=0;i<files.length;i+=1){var file=new UploadFile(files[i]);config.multiple||null!==scope.files[0]&&scope.files[0]instanceof UploadFile&&(scope.files[0].error||(holding instanceof UploadFile&&(holding.cancel(),holding.remove(),_.pull(scope.ngModel,holding)),scope.message.hold=!0,holding=scope.files[0],holding.hold=!0)),config.multiple?(scope.ngModel instanceof Array||(scope.ngModel=[]),scope.ngModel.unshift(file)):null!==scope.ngModel?(scope.ngModel.length=0,scope.ngModel.push(file)):(scope.ngModel=[],scope.ngModel.push(file));var typeCheck=checkFileType(file),sizeCheck=checkFileSize(file);typeCheck&&sizeCheck?file.upload(scope.sendOptions).then(function(){},function(file){file.error||(file.error={}),file.error.fail=!0},function(){}):(file.error||(file.error={}),typeCheck||(file.error.type=!0),sizeCheck||(file.error.size=!0))}})}function checkFileType(file){var mimeType=config.allowedTypes.mimeTypes,extention=config.allowedTypes.extensions,fileType=file.getFileMimeType(),fileEx=file.getFileExtension();return mimeType&&0!==mimeType.length&&_.isArray(mimeType)&&extention&&0!==extention.length&&_.isArray(extention)?_.indexOf(mimeType,fileType)>-1?_.indexOf(extention,fileEx)>-1?!0:!0:!1:!0}function checkFileSize(file){var fileSize=_.parseInt(file.getFileSize());if(!config.maxFileSize)return!0;if("number"==typeof config.maxFileSize)return 0===config.maxFileSize||fileSize<=config.maxFileSize?!0:!1;if("string"==typeof config.maxFileSize){var maxSize=_.parseInt(config.maxFileSize);return 0===maxSize||maxSize>=fileSize?!0:!1}return!0}void 0===scope.ngModel&&(scope.ngModel=[]);var config={multiple:!0,removeFromServer:!0,allowedTypes:{mimeTypes:[],extensions:[]},maxFileSize:"0",url:void 0,options:{}};scope.message={};var holding=null;for(var key in config)void 0!==scope[key]&&(config[key]=scope[key]);config.url&&tinkUploadService.addUrls(config.url),scope.$watchCollection("ngModel",function(newVa){var removed=_.difference(scope.files,newVa),added=_.difference(newVa,scope.files);angular.forEach(removed,function(value){value instanceof UploadFile&&-1!==_.indexOf(scope.files,value)&&_.pull(scope.files,value)}),angular.forEach(added,function(value){value instanceof UploadFile&&(config.multiple?-1===_.indexOf(scope.files,value)&&scope.files.unshift(value):(scope.files.length=0,scope.files.unshift(value)))})},!0),scope.undo=function(){scope.files[0]&&(scope.files[0].cancel(),scope.files[0].remove(),_.pull(scope.ngModel,scope.files[0])),holding.hold=!1,scope.message={},scope.ngModel.length=0,scope.ngModel.push(holding),holding=null},scope.files=[],scope.del=function(index){scope.files[index].cancel(),scope.files[index].remove(),config.multiple||(scope.ngModel.length=0),_.pull(scope.ngModel,scope.files[index])},scope.browseFiles=function(){var dropzone=elem.find(".fileInput");dropzone.click()},scope.onFileSelect=function(files){drop(files)},addLisener()}}}}}])}(),function(module){try{module=angular.module("tink.upload")}catch(e){module=angular.module("tink.upload",["ngLodash","angularFileUpload","tink.safeApply"])}module.provider("tinkUploadService",["lodash",function(_){var urls={};return{$get:function($upload){return{upload:function(file,options){if(file.getData()instanceof window.File){var fileMime=file.getFileMimeType(),sendUrl="";urls[fileMime]?sendUrl=urls[fileMime]:urls.all?sendUrl=urls.all:console.log("tinkUploadService don't have a url to post the file to");var data=angular.extend({},{url:sendUrl,file:file.getData()},options);return $upload.upload(data)}throw"No instanceof uploadfile"},remove:function(file){file.getData()instanceof window.File},addUrls:function(url,type){if(void 0===type||null===type||""===type)type="all",urls[type]=url;else if(_.isArray(type))for(var i=0;i<type.length;i++)urls[type[i]]=url;else"string"==typeof type&&(urls[type]=url)}}}}}])}(),angular.module("tink.upload").run(["$templateCache",function($templateCache){$templateCache.put("templates/tinkUpload.html",'<div class=upload> <div class=upload-zone> <div data-ng-mouseup=browseFiles($event)> <strong translate>Sleep hier een bestand</strong> <span translate>of klik om te bladeren</span>\n<input data-ng-if=multiple class=upload-file-input name={{fieldName}} type=file data-ng-file-select=onFileSelect($files) multiple>\n<input data-ng-if=!multiple class=upload-file-input name={{fieldName}} type=file data-ng-file-select="onFileSelect($files)"> </div> <span class=help-block data-ng-transclude>Toegelaten bestanden: jpg, gif, png, pdf. Maximum grootte: 2MB</span> </div> <p class=upload-file-change data-ng-if=message.hold>De vorige file werd vervangen. <a data-ng-mouseup=undo($event)>Ongedaan maken.</a></p> <ul class=upload-files> <li data-ng-repeat="file in files" data-ng-class="{\'success\': !file.error && file.getProgress() === 100, \'error\': file.error}"> <span class=upload-filename>{{file.getFileName()}}</span>\n<span class=upload-fileoptions> <button class=upload-btn-delete data-ng-click=del($index) data-ng-if="file.getProgress() === 100 || file.error"><span class=sr-only>Verwijder</span></button>\n<span class=upload-feedback data-ng-if="!file.error && file.getProgress() !== 100">{{file.getProgress()}}%</span> </span>\n<span class=upload-error data-ng-if=file.error> <span data-ng-if=file.error.type>Dit bestandstype is niet toegelaten.</span>\n<span data-ng-if=file.error.size>Dit bestand overschrijdt de toegelaten bestandsgrootte.</span>\n<span data-ng-if="!file.error.type && !file.error.size">Er is een fout opgetreden bij het uploaden. Probeer het opnieuw.</span> </span>\n<span class=upload-progress style="width: {{file.getProgress()}}%"></span> </li> </ul> </div>')}]);
//# sourceMappingURL=tink-upload-angular.min.map